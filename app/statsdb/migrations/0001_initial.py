# Generated by Django 5.0 on 2024-01-17 03:00
from django.conf import settings
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_outs(numeric) RETURNS numeric IMMUTABLE AS $$ SELECT CASE WHEN $1 <= {settings.POINT_VALUES_HIT['outs_bp_1']} THEN {settings.POINT_VALUES_HIT['outs_max_1']} * $1 ELSE {settings.POINT_VALUES_HIT['outs_min_1']} * {settings.POINT_VALUES_HIT['outs_bp_1']} + $1 - {settings.POINT_VALUES_HIT['outs_bp_1']} END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_outs();')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_hits(numeric) RETURNS numeric IMMUTABLE AS $$ SELECT CASE WHEN $1 <= {settings.POINT_VALUES_HIT['hits_bp_1']} THEN {settings.POINT_VALUES_HIT['hits_max_1']} * $1 WHEN $1 > {settings.POINT_VALUES_HIT['hits_bp_1']} and $1 <= {settings.POINT_VALUES_HIT['hits_bp_2']} THEN ({settings.POINT_VALUES_HIT['hits_bp_1']} * {settings.POINT_VALUES_HIT['hits_max_1']}) + ($1 - {settings.POINT_VALUES_HIT['hits_bp_1']}) * {settings.POINT_VALUES_HIT['hits_max_2']} ELSE ({settings.POINT_VALUES_HIT['hits_bp_1']} * {settings.POINT_VALUES_HIT['hits_max_1']}) + ({settings.POINT_VALUES_HIT['hits_bp_2']} - {settings.POINT_VALUES_HIT['hits_bp_1']}) * {settings.POINT_VALUES_HIT['hits_max_2']} + ($1 - {settings.POINT_VALUES_HIT['hits_bp_2']}) * {settings.POINT_VALUES_HIT['hits_min_2']} END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_hits();')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_hr(numeric) RETURNS numeric IMMUTABLE AS $$ SELECT CASE WHEN $1 <= {settings.POINT_VALUES_HIT['hr_bp_1']} THEN {settings.POINT_VALUES_HIT['hr_max_1']} * $1 WHEN $1 > {settings.POINT_VALUES_HIT['hr_bp_1']} and $1 <= {settings.POINT_VALUES_HIT['hr_bp_2']} THEN ({settings.POINT_VALUES_HIT['hr_bp_1']} * {settings.POINT_VALUES_HIT['hr_max_1']}) + ($1 - {settings.POINT_VALUES_HIT['hr_bp_1']}) * {settings.POINT_VALUES_HIT['hr_max_2']} WHEN $1 > {settings.POINT_VALUES_HIT['hr_bp_2']} and $1 <= {settings.POINT_VALUES_HIT['hr_bp_3']} THEN ({settings.POINT_VALUES_HIT['hr_bp_1']} * {settings.POINT_VALUES_HIT['hr_max_1']}) + ({settings.POINT_VALUES_HIT['hr_bp_2']} - {settings.POINT_VALUES_HIT['hr_bp_1']}) * {settings.POINT_VALUES_HIT['hr_max_2']} + ($1 - {settings.POINT_VALUES_HIT['hr_bp_2']}) * {settings.POINT_VALUES_HIT['hr_max_3']} WHEN $1 > {settings.POINT_VALUES_HIT['hr_bp_3']} and $1 <= {settings.POINT_VALUES_HIT['hr_bp_4']} THEN ({settings.POINT_VALUES_HIT['hr_bp_1']} * {settings.POINT_VALUES_HIT['hr_max_1']}) + ({settings.POINT_VALUES_HIT['hr_bp_2']} - {settings.POINT_VALUES_HIT['hr_bp_1']}) * {settings.POINT_VALUES_HIT['hr_max_2']} + ({settings.POINT_VALUES_HIT['hr_bp_3']} - {settings.POINT_VALUES_HIT['hr_bp_2']}) * {settings.POINT_VALUES_HIT['hr_max_3']}  + ($1 - {settings.POINT_VALUES_HIT['hr_bp_3']}) * {settings.POINT_VALUES_HIT['hr_max_4']} ELSE ({settings.POINT_VALUES_HIT['hr_bp_1']} * {settings.POINT_VALUES_HIT['hr_max_1']}) + ({settings.POINT_VALUES_HIT['hr_bp_2']} - {settings.POINT_VALUES_HIT['hr_bp_1']}) * {settings.POINT_VALUES_HIT['hr_max_2']} + ({settings.POINT_VALUES_HIT['hr_bp_2']} - {settings.POINT_VALUES_HIT['hr_bp_1']}) * {settings.POINT_VALUES_HIT['hr_max_2']}+ ({settings.POINT_VALUES_HIT['hr_bp_3']} - {settings.POINT_VALUES_HIT['hr_bp_2']}) * {settings.POINT_VALUES_HIT['hr_max_3']}  + ({settings.POINT_VALUES_HIT['hr_bp_4']} - {settings.POINT_VALUES_HIT['hr_bp_3']}) * {settings.POINT_VALUES_HIT['hr_max_4']}  + ($1 - {settings.POINT_VALUES_HIT['hr_bp_4']}) * {settings.POINT_VALUES_HIT['hr_min_4']} END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_hr();')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_k(numeric) RETURNS numeric IMMUTABLE AS $$ SELECT CASE WHEN $1 <= {settings.POINT_VALUES_HIT['k_bp_1']} THEN {settings.POINT_VALUES_HIT['k_max_1']} * $1 WHEN $1 > {settings.POINT_VALUES_HIT['k_bp_1']} and $1 <= {settings.POINT_VALUES_HIT['k_bp_2']} THEN ({settings.POINT_VALUES_HIT['k_bp_1']} * {settings.POINT_VALUES_HIT['k_max_1']}) + ($1 - {settings.POINT_VALUES_HIT['k_bp_1']}) * {settings.POINT_VALUES_HIT['k_max_2']} ELSE ({settings.POINT_VALUES_HIT['k_bp_1']} * {settings.POINT_VALUES_HIT['k_max_1']}) + ({settings.POINT_VALUES_HIT['k_bp_2']} - {settings.POINT_VALUES_HIT['k_bp_1']}) * {settings.POINT_VALUES_HIT['k_max_2']} + ($1 - {settings.POINT_VALUES_HIT['k_bp_2']}) * {settings.POINT_VALUES_HIT['k_min_2']} END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_k();')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_cycle(boolean) RETURNS numeric IMMUTABLE as $$ SELECT CASE WHEN $1 THEN {settings.POINT_VALUES_HIT['cycle']} ELSE 0 END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_cycle()')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_k_pitch(numeric) RETURNS numeric IMMUTABLE AS $$ SELECT CASE WHEN $1 <= {settings.POINT_VALUES_PITCH['k_bp_1']} THEN {settings.POINT_VALUES_PITCH['k_max_1']} * $1 WHEN $1 > {settings.POINT_VALUES_PITCH['k_bp_1']} and $1 <= {settings.POINT_VALUES_PITCH['k_bp_2']} THEN ({settings.POINT_VALUES_PITCH['k_bp_1']} * {settings.POINT_VALUES_PITCH['k_max_1']}) + ($1 - {settings.POINT_VALUES_PITCH['k_bp_1']}) * {settings.POINT_VALUES_PITCH['k_max_2']} ELSE ({settings.POINT_VALUES_PITCH['k_bp_1']} * {settings.POINT_VALUES_PITCH['k_max_1']}) + ({settings.POINT_VALUES_PITCH['k_bp_2']} - {settings.POINT_VALUES_PITCH['k_bp_1']}) * {settings.POINT_VALUES_PITCH['k_max_2']} + ($1 - {settings.POINT_VALUES_PITCH['k_bp_2']}) * {settings.POINT_VALUES_PITCH['k_min_2']} END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_k_pitch();')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_hr_pitch(numeric) RETURNS numeric IMMUTABLE AS $$ SELECT CASE WHEN $1 <= {settings.POINT_VALUES_PITCH['hr_bp_1']} THEN {settings.POINT_VALUES_PITCH['hr_max_1']} * $1 WHEN $1 > {settings.POINT_VALUES_PITCH['hr_bp_1']} and $1 <= {settings.POINT_VALUES_PITCH['hr_bp_2']} THEN ({settings.POINT_VALUES_PITCH['hr_bp_1']} * {settings.POINT_VALUES_PITCH['hr_max_1']}) + ($1 - {settings.POINT_VALUES_PITCH['hr_bp_1']}) * {settings.POINT_VALUES_PITCH['hr_max_2']} ELSE ({settings.POINT_VALUES_PITCH['hr_bp_1']} * {settings.POINT_VALUES_PITCH['hr_max_1']}) + ({settings.POINT_VALUES_PITCH['hr_bp_2']} - {settings.POINT_VALUES_PITCH['hr_bp_1']}) * {settings.POINT_VALUES_PITCH['hr_max_2']} + ($1 - {settings.POINT_VALUES_PITCH['hr_bp_2']}) * {settings.POINT_VALUES_PITCH['hr_min_2']} END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_hr_pitch();')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_perfect_game(boolean) RETURNS numeric IMMUTABLE as $$ SELECT CASE WHEN $1 THEN {settings.POINT_VALUES_PITCH['perfect_game']} ELSE 0 END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_perfect_game()')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_no_hitter(boolean) RETURNS numeric IMMUTABLE as $$ SELECT CASE WHEN $1 THEN {settings.POINT_VALUES_PITCH['no_hitter']} ELSE 0 END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_no_hitter()')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_relief_loss(boolean) RETURNS numeric IMMUTABLE as $$ SELECT CASE WHEN $1 THEN {settings.POINT_VALUES_PITCH['relief_loss']} ELSE 0 END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_relief_loss()')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_bs(boolean) RETURNS numeric IMMUTABLE as $$ SELECT CASE WHEN $1 THEN {settings.POINT_VALUES_PITCH['bs']} ELSE 0 END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_bs()')),
        migrations.RunSQL(f"CREATE OR REPLACE FUNCTION fan_ip(numeric) RETURNS numeric IMMUTABLE as $$ SELECT CASE WHEN $1 > 0.9 THEN ((FLOOR($1) * 3) + (($1 % FLOOR($1)) * 10)) * ({settings.POINT_VALUES_PITCH['ip']} / 3) ELSE ($1 * 10) * ({settings.POINT_VALUES_PITCH['ip']} / 3) END; $$ LANGUAGE SQL;",('DROP FUNCTION IF EXISTS fan_ip()'))
    ]

    